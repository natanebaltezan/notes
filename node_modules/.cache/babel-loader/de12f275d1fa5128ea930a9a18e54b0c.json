{"ast":null,"code":"var _jsxFileName = \"/home/natane.baltezan/Workspace/notes/src/components/Form/Form.jsx\";\nimport React, { Component } from 'react';\nimport './style.css';\n/**\n * onChange: chama uma função de handler quando o evento for disparado\n * bind: faz a associação de uma referência da instância, permitindo o uso dos atributos da instância\n * preventDefault: impede o reload da página\n * construtor: inicializa os atributos da classe\n * _ antes da função: convenção que indica método privado\n */\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.title = '';\n    this.note = '';\n  }\n\n  _handleChangeTitle(event) {\n    this.title = event.target.value;\n    console.log(this.title);\n  }\n\n  _handleChangeNote(event) {\n    this.note = event.target.value;\n    console.log(this.note);\n  }\n\n  _createNote(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    /**\n     * create note é um método do app.js que está sendo passado como prop\n     * para este componente\n     */\n\n    this.props.createNote(this.title, this.note);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this._createNote.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"T\\xEDtulo\",\n      className: \"form_input\",\n      onChange: this._handleChangeTitle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: 15,\n      placeholder: \"Criar uma nota...\",\n      className: \"form_input\",\n      onChange: this._handleChangeNote.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"form_input form_submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Criar nota\"));\n  }\n\n}\n\n;\nexport default Form;","map":{"version":3,"sources":["/home/natane.baltezan/Workspace/notes/src/components/Form/Form.jsx"],"names":["React","Component","Form","constructor","props","title","note","_handleChangeTitle","event","target","value","console","log","_handleChangeNote","_createNote","preventDefault","stopPropagation","createNote","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AAEA;;;;;;;;AAOA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAE3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,IAAL,GAAY,EAAZ;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,KAAD,EAAQ;AACxB,SAAKH,KAAL,GAAaG,KAAK,CAACC,MAAN,CAAaC,KAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACD;;AAEDQ,EAAAA,iBAAiB,CAACL,KAAD,EAAQ;AACvB,SAAKF,IAAL,GAAYE,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,IAAjB;AACD;;AAEDQ,EAAAA,WAAW,CAACN,KAAD,EAAQ;AACjBA,IAAAA,KAAK,CAACO,cAAN;AACAP,IAAAA,KAAK,CAACQ,eAAN;AACA;;;;;AAIA,SAAKZ,KAAL,CAAWa,UAAX,CAAsB,KAAKZ,KAA3B,EAAkC,KAAKC,IAAvC;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AACE,MAAA,QAAQ,EAAE,KAAKJ,WAAL,CAAiBK,IAAjB,CAAsB,IAAtB,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,WAFd;AAGE,MAAA,SAAS,EAAC,YAHZ;AAIE,MAAA,QAAQ,EAAE,KAAKZ,kBAAL,CAAwBY,IAAxB,CAA6B,IAA7B,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eASE;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,WAAW,EAAC,mBAFd;AAGE,MAAA,SAAS,EAAC,YAHZ;AAIE,MAAA,QAAQ,EAAE,KAAKN,iBAAL,CAAuBM,IAAvB,CAA4B,IAA5B,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAeE;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfF,CADF;AAqBD;;AAlD0B;;AAmD5B;AAED,eAAejB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport './style.css';\n\n/**\n * onChange: chama uma função de handler quando o evento for disparado\n * bind: faz a associação de uma referência da instância, permitindo o uso dos atributos da instância\n * preventDefault: impede o reload da página\n * construtor: inicializa os atributos da classe\n * _ antes da função: convenção que indica método privado\n */\nclass Form extends Component {\n\n  constructor(props) {\n    super(props);\n    this.title = '';\n    this.note = '';\n  };\n\n  _handleChangeTitle(event) {\n    this.title = event.target.value;\n    console.log(this.title);\n  };\n\n  _handleChangeNote(event) {\n    this.note = event.target.value;\n    console.log(this.note);\n  };\n\n  _createNote(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    /**\n     * create note é um método do app.js que está sendo passado como prop\n     * para este componente\n     */\n    this.props.createNote(this.title, this.note);\n  };\n\n  render() {\n    return (\n      <form className='form'\n        onSubmit={this._createNote.bind(this)}\n      >\n        <input\n          type='text'\n          placeholder='Título'\n          className='form_input'\n          onChange={this._handleChangeTitle.bind(this)}\n        />\n        <textarea\n          rows={15}\n          placeholder='Criar uma nota...'\n          className='form_input'\n          onChange={this._handleChangeNote.bind(this)}\n        />\n        <button className='form_input form_submit'>\n          Criar nota\n        </button>\n      </form >\n    );\n  };\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}